
scala> import scala.language.experimental.macros
import scala.language.experimental.macros

scala> import scala.reflect.macros.blackbox.Context
import scala.reflect.macros.blackbox.Context

scala> class Bar(val c: Context) { def impl = { import c.universe._; c.Expr[Unit](q"()") } };def bar: Unit = macro Bar.impl
                                                                                                 ^
       error: macro definition needs to be enabled
       by making the implicit value scala.language.experimental.macros visible.
       This can be achieved by adding the import clause 'import scala.language.experimental.macros'
       or by setting the compiler option -language:experimental.macros.
       See the Scaladoc for value scala.language.experimental.macros for a discussion
       why the feature needs to be explicitly enabled.

scala> bar
       ^
       error: not found: value bar

scala> class Foo(val c: Context) { def impl = { import c.universe._; c.Expr[Unit](q"()") } }
defined class Foo

scala> def foo: Unit = macro Foo.impl
                             ^
       error: macro bundles must be static

scala> foo
       ^
       error: not found: value foo

scala> :quit
