override-object-no.scala:14: error: overriding object Bar in trait Foo with object Bar in trait Foo2:
an overriding object must conform to the overridden object's class bound;
 found   : case1.Bippy
 required: case1.Bippy with case1.Bippo
    override object Bar extends Bippy {  // err
                    ^
override-object-no.scala:21: error: overriding object Bar in trait Quux1 with object Bar in trait Quux2:
an overriding object must conform to the overridden object's class bound;
 found   : AnyRef{def g: String}
 required: AnyRef{def g: Int}
  trait Quux2 extends Quux1 { override object Bar { def g = "abc" } } // err
                                              ^
override-object-no.scala:25: error: overriding final object Bar (defined in trait Quux3);
 override object Bar cannot override final member
  trait Quux4 extends Quux3 { override object Bar  } // err
                                              ^
override-object-no.scala:43: error: overriding object A in class Foo with object A in class P2:
an overriding object must conform to the overridden object's class bound;
 found   : case2.Bar[List[String]]
 required: case2.Bar[Traversable[String]]
    override object A extends Bar[List[String]]  // err
                    ^
override-object-no.scala:52: error: overriding def x: SI9574.Foo.type (defined in trait A);
 def x: SI9574.Bar.type has incompatible type
  trait B extends A { def x: Bar.type } // should not compile (scala/bug#9574)
                          ^
override-object-no.scala:53: error: overriding def x: SI9574.Foo.type (defined in trait A);
 override object x has incompatible type
  trait C extends A { override object x }
                                      ^
6 errors found
